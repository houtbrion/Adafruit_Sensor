#ifndef __AUSEX_GROVE_ANALOG_CURRENT_SENSOR_H__
#define __AUSEX_GROVE_ANALOG_CURRENT_SENSOR_H__

#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_CLASS AusExGroveAnalogCurrentSensor
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_NAME "AusExGroveAnalogCurrentSensor"
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_TYPE SENSOR_TYPE_CURRENT
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_LIBRARY_VERSION 1
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_RETURN_VALUE current
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_VALUE_TYPE float
#define AUSEX_GROVE_ANALOG_CURRENT_DEFAULT_VDD 5
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_MIN_VALUE 0
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_AVE_MAX_VALUE 3536.067892503536
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_PEAK_MAX_VALUE 5000
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_RESOLUTION 8.6329561527581329561527581329562
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_MIN_DELAY_MILLI 1000
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_MIN_DELAY 1000000 // AUSEX_GROVE_ANALOG_CURRENT_SENSOR_MIN_DELAY_MILLI*1000
#define AUSEX_GROVE_ANALOG_CURRENT_SENSOR_INIT_DELAY 0

#include "AusEx.h"


class AUSEX_GROVE_ANALOG_CURRENT_SENSOR_CLASS : public Adafruit_SensorEx {
public:
  AUSEX_GROVE_ANALOG_CURRENT_SENSOR_CLASS(int pinNumber, int32_t sensorID = -1);
  AUSEX_GROVE_ANALOG_CURRENT_SENSOR_CLASS(int pinNumber,float vdd, int32_t sensorID = -1);
  bool begin(void);
  bool getEvent(sensors_event_t*);
  void getSensor(sensor_t*);
  bool enableAutoRange(bool enabled);
  int setMode(int mode);
  int getMode(void);

private:
  int _pin;
  float _vdd;
  int32_t _sensorID;
  AUSEX_GROVE_ANALOG_CURRENT_SENSOR_VALUE_TYPE calcValue(int);
  bool _autoRange;
  int _mode;
  float sensorMaxValue;
};



#endif /* __AUSEX_GROVE_ANALOG_CURRENT_SENSOR_H__ */
